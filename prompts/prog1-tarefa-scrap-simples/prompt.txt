Analise o código Python abaixo para o assignment "{assignment_name}".

DESCRIÇÃO DO ASSIGNMENT:
{assignment_description}

REQUISITOS ESPECÍFICOS:
{assignment_requirements}

CÓDIGO DO ENUNCIADO:
{enunciado_code}

CÓDIGO DO ALUNO:
{student_code}

=== CRITÉRIOS FUNDAMENTAIS DE AVALIAÇÃO ===

**DEFINIÇÃO DE PROBLEMAS vs SUGESTÕES:**

**PROBLEMAS (só inclua aqui se for CRÍTICO):**
- Requisitos OBRIGATÓRIOS do enunciado que estão AUSENTES ou INCORRETOS
- Funções obrigatórias que não foram implementadas ou não funcionam
- Estrutura de código que não segue o especificado no enunciado
- Funcionalidades essenciais que não operam corretamente

**SUGESTÕES (inclua aqui melhorias opcionais):**
- Melhorias de código que não são obrigatórias
- Otimizações de performance que não afetam funcionalidade
- Adições de funcionalidades extras que enriquecem mas não são exigidas
- Melhorias de legibilidade ou organização não obrigatórias
- Sugestões de boas práticas que não são requisitos

**EXEMPLOS DE CLASSIFICAÇÃO:**
- ❌ PROBLEMA: "Não acessa a URL do IMDB" (se for obrigatório)
- ✅ SUGESTÃO: "Poderia adicionar mais tratamento de erros"
- ❌ PROBLEMA: "Não extrai os 10 primeiros filmes" (se for obrigatório)
- ✅ SUGESTÃO: "Poderia melhorar a formatação da saída"

=== INSTRUÇÕES DE AVALIAÇÃO ESPECÍFICAS ===

Este é um assignment de Web Scraping básico para extrair dados do IMDB. Avalie considerando:

1. **Funcionamento do Scraping (50% do peso)**:
   - Deve acessar corretamente a URL: https://www.imdb.com/chart/top
   - Deve usar `requests` para buscar o conteúdo HTML
   - Deve usar `BeautifulSoup` para analisar a estrutura
   - Deve extrair os 10 primeiros filmes da lista

2. **Dados Extraídos (30% do peso)**:
   - Deve extrair Título do filme
   - Deve extrair Ano de lançamento
   - Deve extrair Nota (rating)
   - Deve exibir no formato: "1. The Shawshank Redemption (1994) - Nota: 9.2"

3. **Qualidade do Código (20% do peso)**:
   - Deve completar o arquivo `main.py` fornecido
   - Código deve ser legível e bem comentado
   - Deve tratar erros adequadamente (conexão, parsing)
   - Deve seguir boas práticas de Python

4. **Estrutura e Organização**:
   - O aluno deve usar a estrutura fornecida no enunciado
   - Deve completar o arquivo `main.py` existente
   - Não deve modificar a estrutura básica fornecida

5. **Funcionalidade**:
   - O programa deve executar sem erros
   - Deve exibir os dados no console
   - Deve extrair dados reais do site IMDB

=== FORMATO DE RESPOSTA ===

Formate sua resposta EXATAMENTE assim:

NOTA: [número de 0 a 10]
JUSTIFICATIVA: [justificativa resumida e clara da nota]

COMENTARIOS: [lista de comentários sobre pontos positivos]

SUGESTOES: [lista de sugestões de melhoria - apenas melhorias opcionais]

PROBLEMAS: [lista de problemas encontrados - apenas requisitos obrigatórios ausentes/incorretos]

=== REGRAS CRÍTICAS ===

1. **NOTA 10**: Se TODOS os requisitos obrigatórios do enunciado foram cumpridos
2. **PROBLEMAS**: Só inclua requisitos OBRIGATÓRIOS ausentes/incorretos
3. **SUGESTÕES**: Inclua melhorias opcionais e aperfeiçoamentos
4. **NÃO CONFUNDA**: Melhorias não são problemas, problemas são falhas obrigatórias
5. **BASEIE A NOTA**: Nos requisitos do enunciado, não em suas preferências pessoais

IMPORTANTE: Considere que o aluno recebeu uma estrutura base no enunciado. Avalie principalmente se ele implementou corretamente o scraping do IMDB e se extraiu os dados solicitados no formato correto. 