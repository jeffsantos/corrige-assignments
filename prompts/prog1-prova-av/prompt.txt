Analise o código Python abaixo para o assignment "{assignment_name}".

DESCRIÇÃO DO ASSIGNMENT:
{assignment_description}

REQUISITOS ESPECÍFICOS:
{assignment_requirements}

CÓDIGO DO ENUNCIADO:
{enunciado_code}

CÓDIGO DO ALUNO:
{student_code}

=== CRITÉRIOS FUNDAMENTAIS DE AVALIAÇÃO ===

**DEFINIÇÃO DE PROBLEMAS vs SUGESTÕES:**

**PROBLEMAS (só inclua aqui se for CRÍTICO):**
- Requisitos OBRIGATÓRIOS do enunciado que estão AUSENTES ou INCORRETOS
- Funções obrigatórias que não foram implementadas ou não funcionam
- Estrutura de código que não segue o especificado no enunciado
- Funcionalidades essenciais que não operam corretamente

**SUGESTÕES (inclua aqui melhorias opcionais):**
- Melhorias de código que não são obrigatórias
- Otimizações de performance que não afetam funcionalidade
- Adições de funcionalidades extras que enriquecem mas não são exigidas
- Melhorias de legibilidade ou organização não obrigatórias
- Sugestões de boas práticas que não são requisitos

**EXEMPLOS DE CLASSIFICAÇÃO:**
- ❌ PROBLEMA: "Função fetch_page() não foi implementada" (se for obrigatória)
- ✅ SUGESTÃO: "Poderia adicionar tratamento de erros mais robusto"
- ❌ PROBLEMA: "Dashboard não tem 3 filtros" (se for obrigatório)
- ✅ SUGESTÃO: "Poderia melhorar a apresentação visual dos gráficos"

=== INSTRUÇÕES DE AVALIAÇÃO ESPECÍFICAS ===

Este é um assignment de Web Scraping + Streamlit Dashboard. Avalie considerando:

1. **Funcionamento do Scraping (40% do peso)**:
   - A função `fetch_page()` deve fazer requisições HTTP corretas
   - A função `parse_data()` deve extrair dados da página HTML
   - A função `generate_csv()` deve gerar o arquivo CSV corretamente
   - O scraping deve funcionar com o site escolhido pelo aluno

2. **Dashboard Streamlit (50% do peso)**:
   - Deve ter título personalizado do projeto
   - Deve ter 3 filtros na sidebar (text_input, checkbox, radio, selectbox, multiselect, slider)
   - Deve exibir tabela de dados
   - Deve ter 2 gráficos interativos relevantes
   - Deve ter descrição/resumo com markdown

3. **Escolha dos Filtros e Gráficos (10% do peso)**:
   - Os filtros devem fazer sentido para os dados
   - Os gráficos devem ser apropriados e informativos
   - A escolha deve demonstrar entendimento dos dados

4. **Estrutura e Organização**:
   - O aluno deve manter a estrutura fornecida no enunciado
   - Não deve modificar nomes de funções ou parâmetros dados
   - Deve manter separação entre scraping e dashboard

=== FORMATO DE RESPOSTA ===

Formate sua resposta EXATAMENTE assim:

NOTA: [número de 0 a 10]
JUSTIFICATIVA: [justificativa resumida e clara da nota]

COMENTARIOS: [lista de comentários sobre pontos positivos]

SUGESTOES: [lista de sugestões de melhoria - apenas melhorias opcionais]

PROBLEMAS: [lista de problemas encontrados - apenas requisitos obrigatórios ausentes/incorretos]

=== REGRAS CRÍTICAS ===

1. **NOTA 10**: Se TODOS os requisitos obrigatórios do enunciado foram cumpridos
2. **PROBLEMAS**: Só inclua requisitos OBRIGATÓRIOS ausentes/incorretos
3. **SUGESTÕES**: Inclua melhorias opcionais e aperfeiçoamentos
4. **NÃO CONFUNDA**: Melhorias não são problemas, problemas são falhas obrigatórias
5. **BASEIE A NOTA**: Nos requisitos do enunciado, não em suas preferências pessoais

IMPORTANTE: Considere que o aluno recebeu uma estrutura base no enunciado. Avalie principalmente se ele implementou corretamente as funcionalidades solicitadas e se fez escolhas inteligentes para filtros e gráficos. 